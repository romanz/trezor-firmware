# Automatically generated by pb2py
# fmt: off
import protobuf as p

if __debug__:
    try:
        from typing import Dict, List  # noqa: F401
        from typing_extensions import Literal  # noqa: F401
    except ImportError:
        pass


class TxConfidentialAsset(p.MessageType):

    def __init__(
        self,
        amount_blind: bytes = None,
        asset: bytes = None,
        asset_blind: bytes = None,
        nonce_privkey: bytes = None,
    ) -> None:
        self.amount_blind = amount_blind
        self.asset = asset
        self.asset_blind = asset_blind
        self.nonce_privkey = nonce_privkey

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('amount_blind', p.BytesType, 0),
            2: ('asset', p.BytesType, 0),
            3: ('asset_blind', p.BytesType, 0),
            4: ('nonce_privkey', p.BytesType, 0),
        }
